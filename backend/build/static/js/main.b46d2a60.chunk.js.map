{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Why","props","class","How","Scroll","Team","App","useState","isLoading","setIsLoading","file","setFile","fileSubmitted","setFileSubmitted","transcription","setTranscription","useEffect","document","title","Upload","type","onChange","event","preventDefault","console","log","target","value","onClick","axios","post","url","then","response","data","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+MAAe,I,qCCOTA,EAAM,SAACC,GACT,OACI,sBAAKC,MAAM,MAAX,UACI,mDAEA,kHAGA,qJAMA,yLAMA,yGAKA,2BAONC,EAAM,SAACF,GACT,OACI,sBAAKC,MAAM,MAAX,UACI,gDAEA,+BACI,+BAAI,6CAAJ,+HACA,+BAAI,4CAAJ,sCACA,+BAAI,4CAAJ,6FAMVE,EAAS,SAACH,GACZ,OAEI,qBAAKC,MAAM,eAAX,SAEF,gCACC,sBAAMA,MAAM,wBACZ,sBAAMA,MAAM,wBACZ,sBAAMA,MAAM,+BAMbG,EAAO,SAACJ,GACV,OACI,qBAAKC,MAAM,OAAX,SACI,8FA4FGI,EApFH,SAACL,GACT,MAAkCM,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0CJ,oBAAS,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAA0CN,mBAAS,IAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KAEAC,qBAAU,WACNC,SAASC,MAAQ,iBAChB,IAEL,IAAMC,EAAS,SAAClB,GAuCZ,OACI,sBAAKC,MAAM,SAAX,UACI,kEACA,iCACE,uBAAOkB,KAAK,OAAOC,SA1CN,SAACC,GACpBA,EAAMC,iBACNC,QAAQC,IAAIH,EAAMI,OAAOC,OACzBhB,EAAQW,EAAMI,OAAOC,OACrBd,GAAiB,MAuCX,wBAAQO,KAAK,SAASQ,QApCV,SAACN,GAoBrB,OAnBEA,EAAMC,iBACNC,QAAQC,IAAI,mBACZD,QAAQC,IAAIf,GACZG,GAAiB,GACjBJ,GAAa,GAEboB,IAAMC,KAAK,OAAQ,CACjBC,IAAKrB,IAENsB,MAAK,SAAUC,GACdT,QAAQC,IAAIQ,EAASC,MACrBnB,EAAiBkB,EAASC,MAC1BzB,GAAa,GACbe,QAAQC,IAAI,yBAEbU,OAAM,SAAUC,GACfZ,QAAQC,IAAIW,MAIZ,4BAAI1B,KAeA,uBAEDE,EAXD,mBAAGV,MAAM,aAAT,SAAuBY,IAWW,OAK9C,OACI,gCACI,sBAAKZ,MAAM,QAAX,UACI,qBAAKA,MAAM,OAAX,SACI,+CAEJ,sBAAKA,MAAM,OAAX,UACI,yDACA,yEACA,cAAC,EAAD,UAGR,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACiB,EAAD,IACA,cAAC,IAAD,CAAaX,UAAWA,IACxB,cAAC,EAAD,IAEA,0BCjJG6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAAS+B,eAAe,SAM1BX,M","file":"static/js/main.b46d2a60.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { ProgressBar } from 'reprogressbars'\r\n\r\n\r\nconst Why = (props) => {\r\n    return (\r\n        <div class=\"why\">\r\n            <h2>Why SpeechyNotes?</h2>\r\n\r\n            <p>As schools adjust to new pandemic guidelines,\r\n            learning formats are up-in-the-air.</p>\r\n\r\n            <p>\r\n                Some classes are held in-person, which leaves\r\n                little room for those attending remotely\r\n                or who are immunocompromised.\r\n            </p>\r\n\r\n            <p>\r\n                For those folks, there are many barriers to attending class,\r\n                especially if proper virtual-learning technology (cameras, audio recording)\r\n                are not set up.\r\n            </p>\r\n\r\n            <p>\r\n                SpeechyNotes makes it easy for both the lecturer and the\r\n                hybrid student.\r\n            </p>\r\n\r\n            <ul>\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst How = (props) => {\r\n    return (\r\n        <div class=\"how\">\r\n            <h2>3 Simple Steps</h2>\r\n\r\n            <ol>\r\n                <li><strong>Record.</strong> The lecturer records their audio during the class â€” this requires no complicated virtual-learning technical setup. </li>\r\n                <li><strong>Upload</strong> the audio file to LectureNotes.</li>\r\n                <li><strong>Notes.</strong> The hybrid student can now stay up-to-date with a live transcript of the class.</li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n\r\n        <div class=\"mouse_scroll\">\r\n\r\n    \t\t<div>\r\n    \t\t\t<span class=\"m_scroll_arrows unu\"></span>\r\n    \t\t\t<span class=\"m_scroll_arrows doi\"></span>\r\n    \t\t\t<span class=\"m_scroll_arrows trei\"></span>\r\n    \t\t</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Team = (props) => {\r\n    return (\r\n        <div class=\"team\">\r\n            <p>\r\n                Built @ HackDuke:\r\n                    Ayush / Aditya / Prajwal / Bob / Vaibhav\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst App = (props) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [file, setFile] = useState(\"\");\r\n    const [fileSubmitted, setFileSubmitted] = useState(false);\r\n    const [transcription, setTranscription] = useState(\"\");\r\n\r\n    useEffect(()=> {\r\n        document.title = \"SpeechyNotes\"\r\n      }, []);\r\n\r\n    const Upload = (props) => {\r\n        const fileURLHandler = (event) => {\r\n            event.preventDefault()\r\n            console.log(event.target.value)\r\n            setFile(event.target.value)\r\n            setFileSubmitted(false);\r\n        }\r\n\r\n        const submitHandler = (event) => {\r\n            event.preventDefault()\r\n            console.log(\"button pressed!\")\r\n            console.log(file)\r\n            setFileSubmitted(true);\r\n            setIsLoading(true);\r\n\r\n            axios.post('/url', {\r\n              url: file\r\n            })\r\n            .then(function (response)  {\r\n              console.log(response.data);\r\n              setTranscription(response.data);\r\n              setIsLoading(false);\r\n              console.log(\"Got the info back!\")\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error);\r\n            });\r\n\r\n          return (\r\n              <p>{file}</p>\r\n          )\r\n        }\r\n\r\n        const displayTrans = () => {\r\n            return (\r\n                <p class=\"transcript\">{transcription}</p>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div class=\"upload\">\r\n                <h3>Paste your audio file link here.</h3>\r\n                <form>\r\n                  <input type=\"text\" onChange={fileURLHandler}/>\r\n                  <button type=\"submit\" onClick={submitHandler}>Upload</button>\r\n                </form>\r\n                {fileSubmitted ? displayTrans() : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div class=\"title\">\r\n                <div class=\"logo\">\r\n                    <p>SpeechyNotes</p>\r\n                </div>\r\n                <div class=\"desc\">\r\n                    <h1>Transcribe Your Lecture</h1>\r\n                    <p>With SpeechyNotes, an audio-to-text tool</p>\r\n                    <Scroll />\r\n                </div>\r\n            </div>\r\n            <Why />\r\n            <How />\r\n            <Upload />\r\n            <ProgressBar isLoading={isLoading} />\r\n            <Team />\r\n\r\n            <p></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}