{"ast":null,"code":"var _jsxFileName = \"/Users/Vaibhav_Sharma/Desktop/Duke/HackDuke2021/Local Testing/frontend/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [getMessage, setGetMessage] = useState({});\n  useEffect(() => {\n    fetch(\"/flask\").then(response => {\n      console.log(\"SUCCESS\", response);\n      setGetMessage(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"React + Flask Tutorial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: getMessage.status === 200 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: getMessage.data.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"LOADING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hTcwbwXFjv378cDUiUEfqm9NE3I=\");\n\n_c = App;\nexport default App;\nx;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Vaibhav_Sharma/Desktop/Duke/HackDuke2021/Local Testing/frontend/my-app/src/App.js"],"names":["React","useEffect","useState","App","getMessage","setGetMessage","fetch","then","response","console","log","catch","error","logo","status","data","message","x"],"mappings":";;;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZK,IAAAA,KAAK,CAAC,QAAD,CAAL,CAAgBC,IAAhB,CAAqBC,QAAQ,IAAI;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,QAAvB;AACAH,MAAAA,aAAa,CAACG,QAAD,CAAb;AACD,KAHD,EAGGG,KAHH,CAGSC,KAAK,IAAI;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KALD;AAOD,GARQ,EAQN,EARM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEC,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAMT,UAAU,CAACU,MAAX,KAAsB,GAAtB,gBACJ;AAAA,oBAAKV,UAAU,CAACW,IAAX,CAAgBC;AAArB;AAAA;AAAA;AAAA;AAAA,gBADI,gBAGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAxBQb,G;;KAAAA,G;AA0BT,eAAeA,GAAf;AAAmBc,CAAC","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\n\n\n\nfunction App() {\n  const [getMessage, setGetMessage] = useState({})\n\n  useEffect(()=>{\n    fetch(\"/flask\").then(response => {\n      console.log(\"SUCCESS\", response)\n      setGetMessage(response)\n    }).catch(error => {\n      console.log(error)\n    })\n\n  }, [])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>React + Flask Tutorial</p>\n        <div>{getMessage.status === 200 ? \n          <h3>{getMessage.data.message}</h3>\n          :\n          <h3>LOADING</h3>}</div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;x"]},"metadata":{},"sourceType":"module"}